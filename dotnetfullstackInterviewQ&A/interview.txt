	1. Difference between Union and Union All?
	2. Difference between Temp Table and Table variable?
	3. What is Index. Types of index?
	4. Difference between clustered index and non clustered index?
	5. Is there any disadvantage of index?
	increased disk space, slower data modification, and updating records in the clustered index
	They decrease performance on inserts, updates, and deletes.

	1. What is sql profiler.
	SQL Server Profiler is an interface to create and manage traces and analyze and replay trace results
	2. How we find the long time taken query in profiler.
	3. Dependency Injection in core and types.
	4.How to achieve dependency injection at method level.
	5. What is Constructor chaining.
	6. How to call multiple constructors.
public  class class1
{
public class1()
{
Console.WriteLine("Constructor call");
}
}


	7. Can we overload the main method?
	8.Can we override the main method?
	9. Azure function.
	10.Azure Blob storage.
	11. How to connect your application with Adani application.
	12.We have created four functions like Add,Sub,Divide,Multi, how we call all functions without creating the instance and without static class.
	13 What is the Extension method, describe the steps.
	Q1- difference between temp table and table variable
	Q2- what are magic table
	Q3- what are indexes, types and drawback of index in databse
            Its disadvantages include increased disk space, slower data modification, and updating records in the clustered index.
	Q4- Explain MVC architecture
	Q5- Did you worked on React or angular ?
	Q6- how will you manage you dont know about frontend technologies
	Q7- explain union and union all
	Q8- what kind of work you did in your project?
	Q9- Can you explain all the technical entry points and technical work and flow of the project?
	Q10- SOLID pattern
	Q11-refresh tokens
	It is a unique token that is used to obtain additional access tokens. This allows you to have short-lived access tokens without having to collect credentials 	every time one expires.
	Q12-O Auth token
	OAuth doesn't share password data but instead uses authorization tokens to prove an identity between consumers and service providers. OAuth is an 	authentication protocol that allows you to approve one application interacting with another on your behalf without giving away your password.
	Step 1: Registering a Client.
	Step 2: Making the Authorization Request.
	Step 3: Generating Tokens.
	Step 4: Refreshing your Access Tokens
	Q13-WCF
	Q14-singleton pattern
	Q15- metapackages
	Metapackages describe a set of packages that are used together. Metapackages are referenced just like any other NuGet package. By referencing a metapackage, 	you have, in effect, added a reference to each of its dependent packages.
	Q16-Terminal middleware
	Each middleware component in the request pipeline is responsible for invoking the next component in the pipeline or short-circuiting the pipeline. When a 	middleware short-circuits, it's called a terminal middleware because it prevents further middleware from processing the request.
	Q17- View table(view)
	What is isolation in Sql?

	This property ensures that multiple transactions can occur concurrently without leading to the inconsistency of the database state. Transactions occur 	independently without interference. Changes occurring in a particular transaction will not be visible to any other transaction until that particular change in 	that transaction is written to memory or has been committed. This property ensures that the execution of transactions concurrently will result in a state that 	is equivalent to a state achieved these were executed serially in some order. 

	what is indexing in sql server?
	how many indexes can be there in a table
	how indexes are working ?
	what if you put non clustered index on many columns ?
	how you utiize the SQL functions on front end?
	difference in temp table and table variable?
	What are meta packages in c#?
	Metapackages describe a set of packages that are used together. Metapackages are referenced just like any other NuGet package. By referencing a metapackage, 	you have, in effect, added a reference to each of its dependent packages.

	what if we dont have any virtual method in abstract class?
	what is we dont have any absstract method in abstract class?
	what if you assign nullable variable value to non nullable value ?
	how to enable session in API?
	What are restful services?
	how can i return view from API ?
	
	MVC (Core)
	API ( Core)
	Authentication( Identity Server, JWT,)
	Azure cloud computing
	DevOps
	GIT
	Some basic concept Opps
	How to secure API
	Microservices design
	CQRS Design Pattern

	What is content security policy
	What is load balancer
	In computing, load balancing is the process of distributing a set of tasks over a set of resources, with the aim of making their overall processing more 	efficient. Load balancing can optimize the response time and avoid unevenly overloading some compute nodes while other compute nodes are left idle.
	Which design pattern used
	what is application pool
	An application pool defines a group of one or more worker processes, configured with common settings that serve requests to one or more applications that are 	assigned to that application pool.
	Application pools are used to separate sets of IIS worker processes that share the same configuration and application boundaries. Application pools are used to 	isolate our web application for better security, reliability, availability and performance, and they keep running without impacting each other.
	What are the joins
	What is application deployment step on local iis
	Which type of encryption/decryption
	reverse the word in given string
	What type of security used in api
	REST API supports secure sockets layer (SSL), transport layer security (TLS), and Hypertext Transfer Protocol Secure (HTTPS) protocols, which provide security 	by encrypting data during the transfer process.


	1. What is recursion
	The recursive function or method is a very strong functionality in C#. A recursive method is a method which calls itself again and again on basis of few 	statements which need to be true. Similarly, when a function calls itself again and again it is known as a recursive function.
	Recursion is a technique used to solve computer problems by creating a function that calls itself until your program achieves the desired result.
	Direct Recursion. Indirect Recursion. Tail Recursion
	2. write a program logic to palindrome
	3. what is the inheritance
	4. difference between var and dynamic
	5. what are read-only and static
	6. what is method overloading and method overriding
	7. reverse the word in the given string


----------------------------------

what is diffrent entity and ado.net
how its work in mvc
what is TFS and how it is work?
how to return more then one return model action view.
how to pass one action to another action.
what is diffrent between view and partial
how many types of filter.
difrrent between renderbody and renderpage?
diffirent between bundling and manification.
how can be validate server and client side validation.
what is attribute base routing.
what is output testing.
 what is restfull web api.
how we can implemt security in web api.
how sql server work.
what is syntex of cursor.


==================================================


write a program in C# to add nine days in current date include wekend

29-Dec-2022

07-Jan-2023


WAP in C# to find how may day left for year?


public class class1
{

static void Main()
{
datetime currentDate=DateTime.Now();

string NeYearDate="01-01-2023"

string diff=(Convert.DateTime(NewYearDate)-CurrentDate);


}
}

WAp in sql to insert a value a emplyee table
EmpName,EmpSalary,EmpAge

Create table Employee(Id int identity(1,1),EmpName varachar())
Create procedure SP_Emp
as
Insert into Employee Values('','',)
Begin
End




Array.ForEach(data, i => Console.WriteLine(i));
      
    // Use distinct() function
    // To create an array that contain distinct values
    int[] unique = data.Distinct().ToArray();
      
    // Display the final result
    Console.WriteLine("Array after removing duplicate values: ");
    Array.ForEach(unique, j => Console.WriteLine(j));




1) Select A.CustId,A.Name,B.Phone from TableA A inner join TableB B on A.CustId=B.CustId 

2 Select A.CustId,A.Name,B.Phone from TableA A inner join TableB B on A.CustId=B.CustId where B.CustId>1


Create Procedure SP_Dumy
as
begin try
begin
Update table TableA set columname where Custid=1
end
end try
begin Catch 
Select Eerror_Sevelity(),Error_Number(),GETDATE(),Error_Line()
End Catch
And

public interface interface1
{
public void Add();
public void Sub();
}

public class class1:interface1
{
private readonly interface1 _interface; 
public class1(interface1 interface)
{
_interface=interface;

}

}

stattup.cs

configurationService()
services.AddSinglrton<interface1,class1>();



interface IA { void Print(); }
interface IB { void Print(); }
 
public class C: IA, IB 
{
IA.Print()
{
Console.WriteLine("Print A");
}
IB.Print()
{
Console.WriteLine("Print B");
}
}



var input = "Hi user, good morning";
output = "morning good ,user Hi";


public static void Main()
{
string input = "Hi user, good morning";
string str=input.Split(" ");
string newoutput=string.empty;
for(int i=0;i<=str.Length;i++)
{
newoutput+=newoutput[str-i];
}
Console.WriteLine("reverse"+newoutput);

}


---------------------------------------

static void Main(string[] args)
{
	int a = 10, b = 20;
	Console.WriteLine("{0},{0}", a, b);
}

10,10


static void Main(string[] args)
{
	int a = 10, b = 20;
	Console.WriteLine("{0}+{1}", a, b);
}

static void Main(string[] args)
{
	Console.WriteLine(Console.Write("Hello"));
}


WAP to print fibonacci series?

Public class Fibonacci
{
static Void Main()
{
s s1 s2
0 1 1  2,3,5

int s=0;
int s1=s+s1;
int s2=s+s1;
Comsole.WriteLime("Print fibonacci Series"+s2);

}


}

empMast
ID,Name

EmpDtail

Id,Mobile

WAQ to find more then one mobile no

Select * from EmpMast M inner join EmpDetail D on M.Id=D.ID where D.Id>1


JIT,MSIL
CLS
CTS



